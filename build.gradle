plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.nba'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	// Database
	implementation 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	
	// Development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.wiremock:wiremock-standalone:3.3.1'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/dto/**',
				'**/model/entity/**',
				'**/model/enums/**',
				'**/config/**',
				'**/NbaStandingsViewerApplication.class'
			])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.80
			}
		}
	}
}
