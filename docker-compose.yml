services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:14-alpine
    container_name: nba-standings-db
    environment:
      POSTGRES_DB: nba_standings
      POSTGRES_USER: nba_user
      POSTGRES_PASSWORD: nba_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nba-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nba_user -d nba_standings"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nba-standings-backend
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/nba_standings
      SPRING_DATASOURCE_USERNAME: nba_user
      SPRING_DATASOURCE_PASSWORD: nba_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: "true"
      
      # Flyway Configuration
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      
      # NBA API Configuration (placeholder - update with actual values)
      NBA_API_BASE_URL: https://api.balldontlie.io/v1
      NBA_API_KEY: your_api_key_here
      
      # Application Configuration
      SPRING_PROFILES_ACTIVE: dev
      SERVER_PORT: 8080
      
      # Actuator Configuration
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
    ports:
      - "8080:8080"
    volumes:
      # Volume mount for hot reload during development
      - ./src:/app/src:ro
      - ./build:/app/build
    networks:
      - nba-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  nba-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
